kotlin version: 2.0.21
error message: java.lang.IllegalStateException: Cannot evaluate IR expression in annotation:
 STRING_CONCATENATION type=kotlin.String
  CONST String type=kotlin.String value="v2/top-headlines?q=cancer&category=health&language=en&apiKey="
  GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:NEWS_API_KEY type:kotlin.String visibility:public [final,static] declared in com.dicoding.asclepius.BuildConfig' type=kotlin.String superQualifierSymbol=com.dicoding.asclepius.BuildConfig origin=null

	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstAnnotationTransformer.transformSingleArg(IrConstAnnotationTransformer.kt:81)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstAnnotationTransformer.transformAnnotationArgument(IrConstAnnotationTransformer.kt:56)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstAnnotationTransformer.transformAnnotation(IrConstAnnotationTransformer.kt:48)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstAnnotationTransformer.transformAnnotations(IrConstAnnotationTransformer.kt:41)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitDeclaration(IrConstDeclarationAnnotationTransformer.kt:43)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitDeclaration(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitFunction(IrElementVisitor.kt:38)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitFunction(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitFunction(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitSimpleFunction(IrElementVisitor.kt:65)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitSimpleFunction(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitSimpleFunction(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.declarations.IrSimpleFunction.accept(IrSimpleFunction.kt:39)
	at org.jetbrains.kotlin.ir.declarations.IrClass.acceptChildren(IrClass.kt:76)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitElement(IrConstDeclarationAnnotationTransformer.kt:34)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitElement(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitDeclaration(IrElementVisitor.kt:23)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitDeclaration(IrConstDeclarationAnnotationTransformer.kt:44)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitDeclaration(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitClass(IrElementVisitor.kt:29)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitClass(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitClass(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.declarations.IrClass.accept(IrClass.kt:72)
	at org.jetbrains.kotlin.ir.declarations.IrFile.acceptChildren(IrFile.kt:34)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitElement(IrConstDeclarationAnnotationTransformer.kt:34)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitElement(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitPackageFragment(IrElementVisitor.kt:74)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitPackageFragment(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitPackageFragment(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitFile(IrElementVisitor.kt:80)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitFile(IrConstDeclarationAnnotationTransformer.kt:39)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstDeclarationAnnotationTransformer.visitFile(IrConstDeclarationAnnotationTransformer.kt:19)
	at org.jetbrains.kotlin.ir.declarations.IrFile.accept(IrFile.kt:28)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstTransformerKt.transformConst(IrConstTransformer.kt:57)
	at org.jetbrains.kotlin.ir.interpreter.transformer.IrConstTransformerKt.transformConst$default(IrConstTransformer.kt:33)
	at org.jetbrains.kotlin.fir.backend.Fir2IrConverter$Companion.evaluateConstants(Fir2IrConverter.kt:588)
	at org.jetbrains.kotlin.fir.pipeline.Fir2IrPipeline.evaluateConstants(convertToIr.kt:331)
	at org.jetbrains.kotlin.fir.pipeline.Fir2IrPipeline.runActualizationPipeline(convertToIr.kt:237)
	at org.jetbrains.kotlin.fir.pipeline.Fir2IrPipeline.convertToIrAndActualize(convertToIr.kt:130)
	at org.jetbrains.kotlin.fir.pipeline.ConvertToIrKt.convertToIrAndActualize(convertToIr.kt:99)
	at org.jetbrains.kotlin.fir.pipeline.ConvertToIrKt.convertToIrAndActualize$default(convertToIr.kt:72)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.convertToIrAndActualizeForJvm(jvmCompilerPipeline.kt:196)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.convertAnalyzedFirToIr(jvmCompilerPipeline.kt:169)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)


